
 body: FutureBuilder<Prodact>(
        future: futureData,
        builder: (context, snapshot) {
          if (snapshot.hasData) {


            return   Container(
              child: Column(
                children: [

            Container(
              height: 300,
              width: 300,
              padding: EdgeInsets.symmetric(vertical: 40),
              child:
              Image.network(
                '${snapshot.data!.imgUrl}',
                height: 400,
                width: 400,
              ),
            ),


                  Row(
                    children: [
                      SizedBox(
                        width: 20,
                      ),
                      Padding(
                        padding: EdgeInsets.all(5.0),
                        child: Icon(
                          Icons.favorite,
                          color: Colors.red,
                          size: 25,
                        ),
                      ),
                      Text(
                        " ${snapshot.data!.likesCount}",
                        style: TextStyle(fontSize: 17, color: Colors.black),
                      ),
                      SizedBox(
                        width: 50.0,
                      ),
                      Padding(
                        padding: EdgeInsets.all(5.0),
                        child: Icon(
                          Icons.visibility,
                          color: Colors.red,
                          size: 25,
                        ),
                      ),
                      Text(
                        " ${snapshot.data!.views}",
                        style: TextStyle(fontSize: 17, color: Colors.black),
                      ),

                      ////////////////////////////////////////////////////
                      SizedBox(
                        width: 50.0,
                      ),
                      Padding(
                        padding: EdgeInsets.all(5.0),
                        child: GestureDetector(
                          onTap:(){
                            Navigator.push(context, MaterialPageRoute(builder: (context) => ShowComments(Comments.data!.comments)));
                          },
                          child: Icon(
                            Icons.comment,
                            color: Colors.red,
                            size: 25,
                          ),
                        ),
                      ),
                      Text(
                        " ${snapshot.data!.commentsCount}",
                        style: TextStyle(fontSize: 17, color: Colors.black),
                      ),
////////////////////////////////////////////////////////////////////
                      SizedBox(
                        width: 50.0,
                      ),
                      Padding(
                        padding: EdgeInsets.all(5.0),
                        child: Icon(
                          Icons.addchart,
                          color: Colors.red,
                          size: 25,
                        ),
                      ),
                      Text(
                        " ${snapshot.data!.quantity}",
                        style: TextStyle(fontSize: 17, color: Colors.black),
                      ),
                    ],
                  ),
                  Expanded(
                    child: Container(
                      padding: EdgeInsets.symmetric(horizontal: 40),
                      constraints: BoxConstraints.expand(),
                      decoration: BoxDecoration(
                          color: Colors.black12,
                          border: Border.all(color: Colors.white, width: 1),
                          borderRadius: BorderRadius.only(
                              topLeft: Radius.circular(35),
                              topRight: Radius.circular(35))),
                      child: Padding(
                        padding: EdgeInsets.all(1.0),
                        child: SingleChildScrollView(
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.center,
                            children: [
                              Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                children: [
                                  Padding(
                                    padding: EdgeInsets.all(0.0),
                                    child: Container(
                                      width: 100,
                                      child: Text(
                                        "${snapshot.data!.name}",
                                        maxLines: 1,
                                        style: TextStyle(
                                          fontSize: 20.0,
                                          color: col.textcolor2,
                                          fontFamily: 'Dosis',
                                        ),
                                      ),
                                    ),
                                  ),
                                  SizedBox(
                                    width: 100.0,
                                  ),
                                  Column(
                                    children: [
                                      Text(" ${snapshot.data!.currentPrice} S.P",

                                        textAlign: TextAlign.end,
                                        maxLines: 2,
                                        softWrap: true,
                                        style: TextStyle(

                                          fontFamily: 'Dosis',
                                          fontSize: 20.0, color: col.textcolor2,
                                        ),
                                      ),
                                      Text(" ${snapshot.data!.price} S.P",

                                        textAlign: TextAlign.end,
                                        maxLines: 2,
                                        softWrap: true,
                                        style: TextStyle(
                                          decoration: TextDecoration.lineThrough,
                                          fontFamily: 'Dosis',
                                          fontSize: 17.0, color: col.textcolor2,
                                        ),
                                      ),
                                    ],
                                  )

                                ],
                              ),
                              SizedBox(
                                height: 25.0,
                              ),
                              Container(
                                color: Colors.black45,
                                height: 1.0,
                              ),
                              SizedBox(
                                height: 10.0,
                              ),
                              Container(
                                  decoration: BoxDecoration(
                                      borderRadius: BorderRadius.circular(5.0)),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      /*
                                Row(
                                  children: [
                                    Text(data)
                                  ],
                                ),


                                 */
                                      Text("Descraption ",
                                        style: TextStyle(
                                            fontFamily: 'OpenSansCondensed',
                                            fontSize: 25
                                        ),),
                                      SizedBox(
                                        height: 15.0,
                                      ),
                                      Text("${snapshot.data!.description}",
                                          textAlign: TextAlign.start,
                                          style: TextStyle(

                                              fontFamily: 'OpenSansCondensed-Light',
                                              fontWeight:FontWeight.w300,

                                              fontSize: 15.0, color: col.textcolor2))
                                    ],
                                  ))
                            ],
                          ),
                        ),
                      ),
                    ),
                  )
                ],
              ),
            );



          } else if (snapshot.hasError) {
            return Text('${snapshot.error}');
          }

          // By default, show a loading spinner.
          return const CircularProgressIndicator();
        },
      ),















  late Future<List<Page1>> futureData;









  Future<List<Page1>> fetchData() async {
    final response = await http
        .get(Uri.parse('**************************************'));
    if (response.statusCode == 200) {
   //   print("${response.body}");
      List jsonResponse = json.decode(response.body);
      return jsonResponse.map((data) => new Page1.fromJson(data)).toList();
    } else {
      throw Exception('Unexpected error occured!');
    }
  }

  void initState() {
    super.initState();
    futureData = fetchData();
  }





wiedget



 FutureBuilder<List<Page1>>(
          future: futureData,
            builder: (context,snapshot)
            {
              if(snapshot.hasData)
                {
                  print("${snapshot.hasData }plkopiijihihhuihui");
                  List<Page1>? data = snapshot.data;
                     return

                     ListView.builder(
                        // physics: NeverScrollableScrollPhysics(),
                         shrinkWrap: true,
                         itemCount: data!.length,
                         itemBuilder: (BuildContext context, int index) {
                           return buliditem(data[index], context);
                         });}
              else if(snapshot.hasError)
                {
                  return Text("${snapshot.hasError}");

                }

              return CircularProgressIndicator();
            },

    ),
















{
    "WoodWard": [
        {
            "id": 1,
            "name": "Gate1",
            "street": "WoodWard",
            "IsActive": 1,

            "reservations": [
                {
                    "id": 2,
                    "user_id": 1,
                    "service_id": 1,
                    "date": "2022-03-08",
                    "hour": "20:30:00",
                    "IsAccepted": 1
                }
            ]
        },
        {
            "id": 2,
            "name": "Gate2",
            "street": "WoodWard",
            "IsActive": 1,
            "reservations": []
        }
    ],
    "Farmer": [
        {
            "id": 3,
            "name": "Gate3",
            "street": "Farmer",
            "IsActive": 1,
            "reservations": []
        },
        {
            "id": 4,
            "name": "Gate4",
            "street": "Farmer",
            "IsActive": 1,

            "reservations": []
        }
    ],
    "BothStreets": [
        {
            "id": 5,
            "name": "Tower Crane 1",
            "street": "BothStreets",
            "IsActive": 1,

            "reservations": []
        },
        {
            "id": 6,
            "name": "Tower Crane 2",
            "street": "BothStreets",
            "IsActive": 1,

            "reservations": []
        },
        {
            "id": 7,
            "name": "Pump",
            "street": "BothStreets",
            "IsActive": 1,

            "reservations": []
        },
        {
            "id": 8,
            "name": "Trucks Garage",
            "street": "BothStreets",
            "IsActive": 1,

            "reservations": []
        }
    ]
}